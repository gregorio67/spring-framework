<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- mvc:annotation-driven /--> 
    <context:component-scan base-package="stis.sb, stis.framework">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="webBindingInitializer">
            <bean class="stis.framework.spring.webbinder.BaseBindingInitializer"/>
        </property>
 		<property name="messageConverters">
 			<list>
 				<ref bean="jsonMessageConverter" />
 				<ref bean="xmlConverter" />
 			</list>
 		</property> 
        <property name="customArgumentResolvers">
			<list>
				<bean class="stis.framework.nexacro.support.CustomRiaArgumentResolver">
					<property name="uiAdaptor">
						<ref bean="nexacroMapAdaptor" />
					</property>
				</bean>
			</list>
		</property>
    </bean>	

	<bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	 <!-- XML MessageConverter -->
	<bean id="xmlConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<constructor-arg ref="jaxbMarshaller"/>
		<property name="supportedMediaTypes" value="application/xml" />
	</bean>

	<bean id="jaxbMarshaller" class="stis.framework.spring.xml.ClasspathScanningJaxb2Marshaller">
	    <property name="basePackages">
		    <list>
			    <value>stis.sb.sample</value>
		    </list>
		</property>
		<!-- property name="classesToBeBound">
			<list>
				<value>stis.sb.sample.vo.ApiUserVo</value>
				<value>stis.sb.sample.vo.ApiUserListVo</value>
			</list>
		</property-->
	</bean>	

	<!-- bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller"-->
	    <!-- property name="packagesToScan"-->
	    	<!-- set package name without * -->
		    <!-- list>
			    <value>stis.sb.sample.vo</value>
		    </list>
		</property>
	</bean-->	
	<!-- 넥사크로 어답터를 통해 XML정보를 MAP형식으로 변환하도록 처리합니다. -->
    <!-- bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="webBindingInitializer">
            <bean class="stis.framework.spring.webbinder.BaseBindingInitializer"/>
        </property>
        <property name="customArgumentResolvers">
			<list>
				<bean class="stis.framework.nexacro.support.CustomRiaArgumentResolver">
					<property name="uiAdaptor">
						<ref bean="nexacroMapAdaptor" />
					</property>
				</bean>
			</list>
		</property>
    </bean-->


   	<!-- 넥사크로에 필요한 설정을 추가 -->
   		<!-- mvc:interceptors>
			<mvc:interceptor>
				<mvc:mapping path="/**"/>
					<bean id="riaHandler" class="stis.framework.nexacro.support.RiaInterceptor">
						<property name="uiDTO">
							<list>
								<bean class="stis.framework.nexacro.map.NexacroMapDTO" />
							</list>
						</property>
					</bean>
			</mvc:interceptor>
		</mvc:interceptors-->		
	
	<bean name="nexacroMapAdaptor" class="stis.framework.nexacro.map.NexacroAdaptorImp">
		<!-- Cross site scripting Check -->
		<property name="xssBeanName" value="xssUtil" />
	</bean>
	
	
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="localeChangeInterceptor" />
                <ref bean="sessionInteceptor" />
            </list>
        </property>
    </bean>
	
	    
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
    
    <!-- 쿠키를 이용한 Locale 이용시 <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/> -->
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="locale" />
    </bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="268435456"/>
	</bean>
		
	<!-- Exception Resolver -->
	<bean id="exceptionResolver" class="stis.framework.exception.NexacroExceptionResolver">
		<property name="logSize" value="1000" />
	</bean>

    <!-- bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="common/egovError"/>
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">common/dataAccessFailure</prop>
                <prop key="org.springframework.transaction.TransactionException">common/transactionFailure</prop>
                <prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">common/egovError</prop>
            </props>
        </property>
    </bean-->

	<!-- Setting Bean name Resolver -->
	<!-- Bean name resolver should be set that order have priority than url based view resolver  -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"> 
		<property name="order" value="1" />
	</bean>
		

	<bean class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="location">
			<value>classpath:spring/context-views.xml</value>
		</property>
		<property name="order" value="2" />
	</bean>	

    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    	<property name="order" value="3" />
    	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    	<property name="prefix" value="/WEB-INF/jsp/" />
    	<property name="suffix" value=".jsp" />
    </bean>
		
		<!-- Session Value Object -->
	<bean id="sessionVo" class="stis.framework.vo.SBSessionVo" />
	
	<bean id="sessionInteceptor" class="stis.framework.spring.interceptor.SessionInterceptor">
		<property name="skipUris">
			<list>
				<value>/sample/*</value>
				<value>/rest/*</value>
				<value>/oauth/*</value>
			</list>
		</property>
		<property name="sessionVo" ref="sessionVo" />
		<property name="loginURI" value="/sample/loginPage.do" />
		<!-- property name="blockServiceName" value="blockService" /-->
		<!-- property name="authCheckServiceName" value="authCheckService" /-->
	</bean>
	        
</beans>
