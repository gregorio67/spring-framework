<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sehati.inf.translog">

	<!-- Transaction Log sequence -->
	<select id="selTransLogSeq"  resultType="int">
		SELECT SQ_TRANS_LOG_01.NEXTVAL FROM DUAL
	</select>
	
	<select id="selTransLog" parameterType="java.util.Map" resultType="cmn.util.dao.CamelMap">
		SELECT
			TRAN_SEQ,
			SERVER_ID,
			START_TIME,
			END_TIME,
			CALL_START_TIME,
			CALL_END_TIME,
			INTERFACE_ID,
			INTERFACE_NAME,
			STATUS,
			EXIT_CODE,
			EXIT_MESSAGE,
			CLIENT_ID,
			CLIENT_IP,
			AUTH_KEY,
			REQUEST_DATA,
			RESPONSE_DATA,
			SOURCE_SERVER,
			TARGET_SERVER
		FROM TRANS_LOG
		WHERE 1 = 1
		<if test = 'startTime != "" and startTime != null'>
			AND START_TIME >= #{startTime}
		</if>
		<if test = 'endTime != "" and endTime != null'>
			AND END_TIME >= #{endTime}
		</if>
		<if test = 'status != "" and status != null'>
			AND STATUS = #{status}
		</if>		
		<if test = 'interfaceId != "" and interfaceId != null'>
			AND INTERFACE_ID = #{interfaceId}
		</if>
		ORDER BY START_TIME DESC

	</select>

	<insert id="insTransLog" parameterType="java.util.Map">
		INSERT
		INTO TRANS_LOG (
				TRAN_SEQ,	
				SERVER_ID,		
				START_TIME,		
				END_TIME,	
				CALL_START_TIME,	
				CALL_END_TIME,
				INTERFACE_ID,
				INTERFACE_NAME,
				STATUS,
				EXIT_CODE,
				EXIT_MESSAGE,
				CLIENT_ID,
				CLIENT_IP,
				AUTH_KEY,
				REQUEST_DATA,
				RESPONSE_DATA,
				SOURCE_SERVER,
				TARGET_SERVER)
		VALUES(	
				#{tranSeq},
				#{serverId},
				#{startTime},
				#{endTime},
				#{callStartTime},
				#{callEndTime},
				#{interfaceId},
				#{interfaceName},
				#{status},
				#{exitCode},
				#{exitMessage},
				#{clientId},
				#{clientIp},
				#{authKey},
				#{requestData},
				#{responseData},
				#{sourceServer},
				#{targetServer})
	</insert>

	<!-- Transaction Log Update -->
	<update id="updTransLog" parameterType="java.util.Map">
		UPDATE TRANS_LOG
		SET END_TIME = #{endTime},
			CALL_START_TIME = #{callStartTime},
			CALL_END_TIME = #{callEndTime},
			STATUS = #{status},	
			EXIT_CODE = #{exitCode},
			EXIT_MESSAGE = #{exitMessage},
			RESPONSE_DATA = #{responseData}
		WHERE TRAN_SEQ = #{tranSeq}
	</update>
	
	<select id="selMonthlyChart" parameterType="java.util.Map" resultType="cmn.util.dao.CamelMap">
		SELECT *
		FROM (
		     SELECT TO_CHAR(START_TIME, 'YYYY-MM') START_DAY
		          ,INTERFACE_ID
		     FROM TRANS_LOG
		     WHERE 1 = 1
			<if test='startDate != "" and startDate != null'>
		     <![CDATA[AND START_TIME >=  #{startDate}]]>
		    </if>
			<if test='interfaceId != "" and interfaceId != null'>
			AND   INTERFACE_ID LIKE '%' || #{interfaceId} || '%'
			</if>
		)
		PIVOT 
		(
			COUNT(START_DAY)
		    FOR START_DAY IN
		    <foreach collection="condDate" item="item"  open="(" close=")" separator=",">
            ${item}
	        </foreach>
		)	
	</select>
	<!-- 
	<select id="selDailyChart" parameterType="java.util.Map" resultType="cmn.util.dao.CamelMap">
		SELECT TO_CHAR(START_TIME, 'YYYY-MM-DD') START_DATE
		      ,INTERFACE_ID
		      ,COUNT(*) CNT
		FROM   TRANS_LOG
		WHERE 1 = 1
		<if test='startDate != "" and startDate != null'>
		<![CDATA[AND   START_TIME >= #{startDate}]]>
		</if>
		<if test='interfaceId != "" and interfaceId != null'>
		AND   INTERFACE_ID LIKE '%' || #{interfaceId} || '%'
		</if>
		GROUP BY TO_CHAR(START_TIME, 'YYYY-MM-DD'), INTERFACE_ID	
	</select>
	 -->
	<select id="selDailyChart" parameterType="java.util.Map" resultType="cmn.util.dao.CamelMap">
		SELECT *
		FROM (
		     SELECT TO_CHAR(START_TIME, 'YYYY-MM-DD') START_DAY
		          ,INTERFACE_ID
		     FROM TRANS_LOG
		     WHERE 1 = 1
			<if test='startDate != "" and startDate != null'>
		     <![CDATA[AND START_TIME >=  #{startDate}]]>
		    </if>
			<if test='interfaceId != "" and interfaceId != null'>
			AND   INTERFACE_ID LIKE '%' || #{interfaceId} || '%'
			</if>
		)
		PIVOT 
		(
			COUNT(START_DAY)
		    FOR START_DAY IN
		    <foreach collection="condDate" item="item"  open="(" close=")" separator=",">
            ${item}
	        </foreach>
		)	
	
	</select>
	<select id="selStartDays" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT q'[']' || START_DATE || q'[']' START_DATE
		FROM   
		   (SELECT DISTINCT(TO_CHAR(START_TIME, 'YYYY-MM-DD')) START_DATE FROM TRANS_LOG
			WHERE 1 = 1
			<if test='startDate != "" and startDate != null'>
			<![CDATA[AND   START_TIME >= #{startDate}]]>
			</if>
			<if test='interfaceId != "" and interfaceId != null'>
			AND   INTERFACE_ID LIKE '%' || #{interfaceId} || '%'
			</if>
			ORDER BY 1
			)
	</select>
	
	<select id="selStartMonths" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT q'[']' || START_DATE || q'[']' START_DATE
		FROM   
		   (SELECT DISTINCT(TO_CHAR(START_TIME, 'YYYY-MM')) START_DATE FROM TRANS_LOG
			WHERE 1 = 1
			<if test='startDate != "" and startDate != null'>
			<![CDATA[AND   START_TIME >= #{startDate}]]>
			</if>
			<if test='interfaceId != "" and interfaceId != null'>
			AND   INTERFACE_ID LIKE '%' || #{interfaceId} || '%'
			</if>
			ORDER BY 1
			)

	</select>
	
</mapper>
